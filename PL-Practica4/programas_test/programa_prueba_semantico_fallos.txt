program programa_guion {
    ini_var_local
    inta ve; //Tiene que dar error sintactico tambien (0.15)
    int ve1, ve2;
    float vf;
    char vc;
    bool vl;
    fin_var_local
    
    int funcionA (int a1, int a2)
    {
        ini_var_local
        int x1, x2;
        int a2; //Da fallo (0.2)
        fin_var_local

        int funcionB(int i)
        {
            ini_var_local
            int y1;
            fin_var_local
            
            ve1 = x1;

            return y1;
        }

        x1 = a1;
        x2 = a2;

        vf = 1.0f;

        x1 = funcionB(x1);
        return x1 ;
    }

    {
        ini_var_local
        int y2 , y3;
        float y4;
        fin_var_local

        int funcionC(int ent)
        {
            ini_var_local
            int y1;
            fin_var_local

            y1 = y1;
            return y1;
        }

        //(0.5)
        y4 = funcionB(1.0f); //Llamada a funcion fuera de su ambito
        y4 = funcionC(1.0f, 1);//Llamada a funcion con numero y tipo de los argumentos erroneos

        //Error de tipo en expresiones lógicas y aritméticas. (0.2)
        {
            ini_var_local
            bool b2 , b3;
            int i1;
            fin_var_local

            int funcionD(int ent)
            {
                ini_var_local
                int f4;
                fin_var_local

                b2 = f4 != b2;
                b3 = b3 < f4;
            }

            i1 = funcionD(i1);
            

            //Comprobar las expresiones con listas y forzar el fallo (0.2)
        }
    }

}